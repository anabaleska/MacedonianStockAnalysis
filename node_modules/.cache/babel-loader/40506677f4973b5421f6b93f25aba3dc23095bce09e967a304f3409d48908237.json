{"ast":null,"code":"import axios from 'axios';\nimport config from \"../config/config\";\nconst BASE_URL = config.API_BASE_URL;\nexport const register = async userDTO => {\n  await axios.post(`${BASE_URL}/register`, userDTO);\n};\nexport const login = async userLoginDTO => {\n  const response = await axios.post(`${BASE_URL}/login`, userLoginDTO);\n  const {\n    token\n  } = response.data; // Adjust this based on your backend response\n  localStorage.setItem('token', token);\n};\nexport const logout = async () => {\n  await axios.post(`${BASE_URL}/logout`);\n};","map":{"version":3,"names":["axios","config","BASE_URL","API_BASE_URL","register","userDTO","post","login","userLoginDTO","response","token","data","localStorage","setItem","logout"],"sources":["D:/Факултет/petti semestar/DAS/Homework1/HomeWork2/prototip/msa_frontend/src/service/UserService.js"],"sourcesContent":["import axios from 'axios';\r\nimport config from \"../config/config\";\r\n\r\nconst BASE_URL = config.API_BASE_URL;\r\n\r\nexport const register = async (userDTO) => {\r\n    await axios.post(`${BASE_URL}/register`, userDTO);\r\n};\r\n\r\nexport const login = async (userLoginDTO) => {\r\n    const response = await axios.post(`${BASE_URL}/login`, userLoginDTO);\r\n    const { token } = response.data;  // Adjust this based on your backend response\r\n    localStorage.setItem('token', token);\r\n\r\n\r\n};\r\n\r\nexport const logout = async () => {\r\n    await axios.post(`${BASE_URL}/logout`);\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,kBAAkB;AAErC,MAAMC,QAAQ,GAAGD,MAAM,CAACE,YAAY;AAEpC,OAAO,MAAMC,QAAQ,GAAG,MAAOC,OAAO,IAAK;EACvC,MAAML,KAAK,CAACM,IAAI,CAAC,GAAGJ,QAAQ,WAAW,EAAEG,OAAO,CAAC;AACrD,CAAC;AAED,OAAO,MAAME,KAAK,GAAG,MAAOC,YAAY,IAAK;EACzC,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACM,IAAI,CAAC,GAAGJ,QAAQ,QAAQ,EAAEM,YAAY,CAAC;EACpE,MAAM;IAAEE;EAAM,CAAC,GAAGD,QAAQ,CAACE,IAAI,CAAC,CAAE;EAClCC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,KAAK,CAAC;AAGxC,CAAC;AAED,OAAO,MAAMI,MAAM,GAAG,MAAAA,CAAA,KAAY;EAC9B,MAAMd,KAAK,CAACM,IAAI,CAAC,GAAGJ,QAAQ,SAAS,CAAC;AAC1C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}