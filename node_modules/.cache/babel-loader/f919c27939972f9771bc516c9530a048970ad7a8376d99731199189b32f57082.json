{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0424\\u0430\\u043A\\u0443\\u043B\\u0442\\u0435\\u0442\\\\petti semestar\\\\DAS\\\\Homework1\\\\HomeWork2\\\\prototip\\\\msa_frontend\\\\src\\\\Predictions.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Select from 'react-select';\nimport { Line } from 'react-chartjs-2';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Predictions = () => {\n  _s();\n  const [tickers, setTickers] = useState([]);\n  const [selectedTicker, setSelectedTicker] = useState(null);\n  const [chartData, setChartData] = useState(null);\n  const [finalPrediction, setFinalPrediction] = useState(null);\n  useEffect(() => {\n    // Fetch tickers from API\n    axios.get('http://localhost:8081/api/tickers').then(response => setTickers(response.data.map(ticker => ({\n      value: ticker,\n      label: ticker\n    })))).catch(error => console.error('Error fetching tickers:', error));\n  }, []);\n  const handleTickerChange = selectedOption => {\n    setSelectedTicker(selectedOption);\n\n    // Call the backend for prediction\n    axios.post('http://localhost:8081/api/predict', {\n      ticker: selectedOption.value\n    }).then(response => {\n      const data = response.data;\n      setFinalPrediction(data.final_prediction);\n      setChartData({\n        labels: Array.from({\n          length: data.actual_prices.length\n        }, (_, i) => i + 1),\n        datasets: [{\n          label: 'Actual Prices',\n          data: data.actual_prices,\n          borderColor: 'blue',\n          fill: false\n        }, {\n          label: 'Predicted Prices',\n          data: data.predicted_prices,\n          borderColor: 'green',\n          fill: false\n        }]\n      });\n    }).catch(error => console.error('Error fetching predictions:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Stock Price Predictions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      options: tickers,\n      onChange: handleTickerChange,\n      placeholder: \"Select a Ticker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), chartData && /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: {\n        responsive: true,\n        maintainAspectRatio: false\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this), finalPrediction && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Final Predicted Price: $\", finalPrediction.toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(Predictions, \"tbnKN/Y4n4VhriTs1rTOyTeJbDY=\");\n_c = Predictions;\nexport default Predictions;\nvar _c;\n$RefreshReg$(_c, \"Predictions\");","map":{"version":3,"names":["React","useState","useEffect","Select","Line","axios","jsxDEV","_jsxDEV","Predictions","_s","tickers","setTickers","selectedTicker","setSelectedTicker","chartData","setChartData","finalPrediction","setFinalPrediction","get","then","response","data","map","ticker","value","label","catch","error","console","handleTickerChange","selectedOption","post","final_prediction","labels","Array","from","length","actual_prices","_","i","datasets","borderColor","fill","predicted_prices","children","fileName","_jsxFileName","lineNumber","columnNumber","options","onChange","placeholder","responsive","maintainAspectRatio","toFixed","_c","$RefreshReg$"],"sources":["D:/Факултет/petti semestar/DAS/Homework1/HomeWork2/prototip/msa_frontend/src/Predictions.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Select from 'react-select';\r\nimport { Line } from 'react-chartjs-2';\r\nimport axios from 'axios';\r\n\r\nconst Predictions = () => {\r\n    const [tickers, setTickers] = useState([]);\r\n    const [selectedTicker, setSelectedTicker] = useState(null);\r\n    const [chartData, setChartData] = useState(null);\r\n    const [finalPrediction, setFinalPrediction] = useState(null);\r\n\r\n    useEffect(() => {\r\n        // Fetch tickers from API\r\n        axios.get('http://localhost:8081/api/tickers')\r\n            .then(response => setTickers(response.data.map(ticker => ({ value: ticker, label: ticker }))))\r\n            .catch(error => console.error('Error fetching tickers:', error));\r\n    }, []);\r\n\r\n    const handleTickerChange = (selectedOption) => {\r\n        setSelectedTicker(selectedOption);\r\n\r\n        // Call the backend for prediction\r\n        axios.post('http://localhost:8081/api/predict', { ticker: selectedOption.value })\r\n            .then(response => {\r\n                const data = response.data;\r\n                setFinalPrediction(data.final_prediction);\r\n                setChartData({\r\n                    labels: Array.from({ length: data.actual_prices.length }, (_, i) => i + 1),\r\n                    datasets: [\r\n                        {\r\n                            label: 'Actual Prices',\r\n                            data: data.actual_prices,\r\n                            borderColor: 'blue',\r\n                            fill: false,\r\n                        },\r\n                        {\r\n                            label: 'Predicted Prices',\r\n                            data: data.predicted_prices,\r\n                            borderColor: 'green',\r\n                            fill: false,\r\n                        }\r\n                    ]\r\n                });\r\n            })\r\n            .catch(error => console.error('Error fetching predictions:', error));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Stock Price Predictions</h1>\r\n            <Select\r\n                options={tickers}\r\n                onChange={handleTickerChange}\r\n                placeholder=\"Select a Ticker\"\r\n            />\r\n            {chartData && (\r\n                <Line\r\n                    data={chartData}\r\n                    options={{ responsive: true, maintainAspectRatio: false }}\r\n                />\r\n            )}\r\n            {finalPrediction && <h3>Final Predicted Price: ${finalPrediction.toFixed(2)}</h3>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Predictions;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}