{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0424\\u0430\\u043A\\u0443\\u043B\\u0442\\u0435\\u0442\\\\petti semestar\\\\DAS\\\\Homework1\\\\HomeWork2\\\\prototip\\\\msa_frontend\\\\src\\\\PrivateRoute.js\";\nimport React from 'react';\nimport { Route, Navigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  element: Component,\n  ...rest\n}) => {\n  const token = localStorage.getItem('token');\n  const decodedToken = token ? jwtDecode(token) : null;\n\n  // Check if token is present and if the user has the correct role (admin)\n  if (!token || decodedToken.role !== 'ADMIN') {\n    console.log(decodedToken.role);\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 16\n    }, this); // Redirect to login if not authorized\n  }\n  return /*#__PURE__*/_jsxDEV(Route, {\n    ...rest,\n    element: /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 38\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 12\n  }, this);\n};\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Route","Navigate","jwtDecode","jsxDEV","_jsxDEV","PrivateRoute","element","Component","rest","token","localStorage","getItem","decodedToken","role","console","log","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Факултет/petti semestar/DAS/Homework1/HomeWork2/prototip/msa_frontend/src/PrivateRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { Route, Navigate } from 'react-router-dom';\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\nconst PrivateRoute = ({ element: Component, ...rest }) => {\r\n    const token = localStorage.getItem('token');\r\n    const decodedToken = token ? jwtDecode(token) : null;\r\n\r\n    // Check if token is present and if the user has the correct role (admin)\r\n    if (!token || decodedToken.role !== 'ADMIN') {\r\n        console.log(decodedToken.role)\r\n        return <Navigate to=\"/login\" />;  // Redirect to login if not authorized\r\n    }\r\n\r\n    return <Route {...rest} element={<Component />} />;\r\n};\r\n\r\nexport default PrivateRoute;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAClD,SAASC,SAAS,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,YAAY,GAAGA,CAAC;EAAEC,OAAO,EAAEC,SAAS;EAAE,GAAGC;AAAK,CAAC,KAAK;EACtD,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMC,YAAY,GAAGH,KAAK,GAAGP,SAAS,CAACO,KAAK,CAAC,GAAG,IAAI;;EAEpD;EACA,IAAI,CAACA,KAAK,IAAIG,YAAY,CAACC,IAAI,KAAK,OAAO,EAAE;IACzCC,OAAO,CAACC,GAAG,CAACH,YAAY,CAACC,IAAI,CAAC;IAC9B,oBAAOT,OAAA,CAACH,QAAQ;MAACe,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CAAC,CAAE;EACtC;EAEA,oBAAOhB,OAAA,CAACJ,KAAK;IAAA,GAAKQ,IAAI;IAAEF,OAAO,eAAEF,OAAA,CAACG,SAAS;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACtD,CAAC;AAACC,EAAA,GAXIhB,YAAY;AAalB,eAAeA,YAAY;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}