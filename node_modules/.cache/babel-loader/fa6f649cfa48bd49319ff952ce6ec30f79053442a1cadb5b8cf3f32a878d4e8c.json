{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0424\\u0430\\u043A\\u0443\\u043B\\u0442\\u0435\\u0442\\\\petti semestar\\\\DAS\\\\Homework1\\\\HomeWork2\\\\prototip\\\\msa_frontend\\\\src\\\\components\\\\indicators\\\\GraphComponet.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from \"chart.js\";\nimport styles from \"./GraphComponent.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst GraphComponent = ({\n  tickerId\n}) => {\n  _s();\n  const [indicators, setIndicators] = useState([]);\n  useEffect(() => {\n    if (!tickerId) return;\n    const fetchIndicators = async () => {\n      try {\n        const response = await fetch(`http://localhost:8081/api/stock-indicators/${tickerId}`);\n        const data = await response.json();\n        setIndicators(data);\n      } catch (error) {\n        console.error(\"Error fetching indicators:\", error);\n      }\n    };\n    fetchIndicators();\n  }, [tickerId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.graphContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Graph Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Graph goes here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(GraphComponent, \"2dx74LO4juDiQTrlpXGeBguVZrw=\");\n_c = GraphComponent;\nexport default GraphComponent;\nvar _c;\n$RefreshReg$(_c, \"GraphComponent\");","map":{"version":3,"names":["React","useEffect","useState","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","styles","jsxDEV","_jsxDEV","register","GraphComponent","tickerId","_s","indicators","setIndicators","fetchIndicators","response","fetch","data","json","error","console","className","graphContainer","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Факултет/petti semestar/DAS/Homework1/HomeWork2/prototip/msa_frontend/src/components/indicators/GraphComponet.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from \"chart.js\";\r\nimport styles from \"./GraphComponent.module.css\";\r\n\r\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\r\n\r\nconst GraphComponent = ({tickerId}) => {\r\n\r\n    const [indicators, setIndicators] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (!tickerId) return;\r\n\r\n        const fetchIndicators = async () => {\r\n            try {\r\n                const response = await fetch(`http://localhost:8081/api/stock-indicators/${tickerId}`);\r\n                const data = await response.json();\r\n                setIndicators(data);\r\n            } catch (error) {\r\n                console.error(\"Error fetching indicators:\", error);\r\n            }\r\n        };\r\n\r\n        fetchIndicators();\r\n    }, [tickerId]);\r\n\r\n\r\n    return (\r\n        <div className={styles.graphContainer}>\r\n            <h2>Graph Title</h2>\r\n            {/* Replace with your graph implementation */}\r\n            <p>Graph goes here</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GraphComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SAASC,KAAK,IAAIC,OAAO,EAAEC,aAAa,EAAEC,WAAW,EAAEC,YAAY,EAAEC,WAAW,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AAC1H,OAAOC,MAAM,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjDV,OAAO,CAACW,QAAQ,CAACV,aAAa,EAAEC,WAAW,EAAEC,YAAY,EAAEC,WAAW,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAE/F,MAAMK,cAAc,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAEnC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACZ,IAAI,CAACiB,QAAQ,EAAE;IAEf,MAAMI,eAAe,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8CAA8CN,QAAQ,EAAE,CAAC;QACtF,MAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCL,aAAa,CAACI,IAAI,CAAC;MACvB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACtD;IACJ,CAAC;IAEDL,eAAe,CAAC,CAAC;EACrB,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC;EAGd,oBACIH,OAAA;IAAKc,SAAS,EAAEhB,MAAM,CAACiB,cAAe;IAAAC,QAAA,gBAClChB,OAAA;MAAAgB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEpBpB,OAAA;MAAAgB,QAAA,EAAG;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AAEd,CAAC;AAAChB,EAAA,CA5BIF,cAAc;AAAAmB,EAAA,GAAdnB,cAAc;AA8BpB,eAAeA,cAAc;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}