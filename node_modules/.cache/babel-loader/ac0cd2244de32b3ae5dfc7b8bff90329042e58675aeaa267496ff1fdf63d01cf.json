{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0424\\u0430\\u043A\\u0443\\u043B\\u0442\\u0435\\u0442\\\\petti semestar\\\\DAS\\\\Homework1\\\\HomeWork2\\\\prototip\\\\msa_frontend\\\\src\\\\components\\\\news\\\\TickerList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport styles from './TickerList.module.css'; // Import CSS module\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TickerList = () => {\n  _s();\n  const [tickers, setTickers] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 5; // Number of tickers to show per page\n\n  useEffect(() => {\n    // Fetch ticker data from the backend\n    axios.get(\"http://localhost:8081/api/ticker-news\").then(response => {\n      // Assuming the response contains an object with a \"content\" field that is an array\n      const data = response.data.content || []; // If no content, fallback to an empty array\n      console.log(\"Tickers fetched:\", data); // Log the data to check the structure\n      setTickers(data);\n    }).catch(error => console.error(\"Error fetching tickers:\", error));\n  }, []);\n  const displayedTickers = tickers.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage);\n  const nextPage = () => setCurrentPage(prev => Math.min(prev + 1, Math.ceil(tickers.length / itemsPerPage)));\n  const prevPage = () => setCurrentPage(prev => Math.max(prev - 1, 1));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.tickerList,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Ticker Predictions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"TickerId\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Prediction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: displayedTickers.map((ticker, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: ticker.tickerId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: ticker.date.split(\"T\")[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: ticker.sentiment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.pagination,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: prevPage,\n        disabled: currentPage === 1,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextPage,\n        disabled: currentPage === Math.ceil(tickers.length / itemsPerPage),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(TickerList, \"suB1OGG/SIpKUHZU0bnvS2q0hHQ=\");\n_c = TickerList;\nexport default TickerList;\nvar _c;\n$RefreshReg$(_c, \"TickerList\");","map":{"version":3,"names":["React","useEffect","useState","axios","styles","jsxDEV","_jsxDEV","TickerList","_s","tickers","setTickers","currentPage","setCurrentPage","itemsPerPage","get","then","response","data","content","console","log","catch","error","displayedTickers","slice","nextPage","prev","Math","min","ceil","length","prevPage","max","className","tickerList","children","fileName","_jsxFileName","lineNumber","columnNumber","map","ticker","index","tickerId","date","split","sentiment","pagination","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/Факултет/petti semestar/DAS/Homework1/HomeWork2/prototip/msa_frontend/src/components/news/TickerList.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport styles from './TickerList.module.css'; // Import CSS module\r\n\r\nconst TickerList = () => {\r\n    const [tickers, setTickers] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const itemsPerPage = 5; // Number of tickers to show per page\r\n\r\n    useEffect(() => {\r\n        // Fetch ticker data from the backend\r\n        axios.get(\"http://localhost:8081/api/ticker-news\")\r\n            .then(response =>\r\n            {\r\n                // Assuming the response contains an object with a \"content\" field that is an array\r\n                const data = response.data.content || []; // If no content, fallback to an empty array\r\n                console.log(\"Tickers fetched:\", data); // Log the data to check the structure\r\n                setTickers(data);\r\n            })\r\n            .catch(error => console.error(\"Error fetching tickers:\", error));\r\n    }, []);\r\n\r\n    const displayedTickers = tickers.slice(\r\n        (currentPage - 1) * itemsPerPage,\r\n        currentPage * itemsPerPage\r\n    );\r\n\r\n    const nextPage = () => setCurrentPage(prev => Math.min(prev + 1, Math.ceil(tickers.length / itemsPerPage)));\r\n    const prevPage = () => setCurrentPage(prev => Math.max(prev - 1, 1));\r\n\r\n    return (\r\n        <div className={styles.tickerList}>\r\n            <h2>Ticker Predictions</h2>\r\n            <table>\r\n                <thead>\r\n                <tr>\r\n                    <th>TickerId</th>\r\n                    <th>Date</th>\r\n                    <th>Prediction</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {displayedTickers.map((ticker, index) => (\r\n                    <tr key={index}>\r\n                        <td>{ticker.tickerId}</td>\r\n                        <td>{ticker.date.split(\"T\")[0]}</td>\r\n                        <td>{ticker.sentiment}</td>\r\n                    </tr>\r\n                ))}\r\n                </tbody>\r\n            </table>\r\n            <div className={styles.pagination}>\r\n                <button onClick={prevPage} disabled={currentPage === 1}>Previous</button>\r\n                <button onClick={nextPage} disabled={currentPage === Math.ceil(tickers.length / itemsPerPage)}>Next</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TickerList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,yBAAyB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAMW,YAAY,GAAG,CAAC,CAAC,CAAC;;EAExBZ,SAAS,CAAC,MAAM;IACZ;IACAE,KAAK,CAACW,GAAG,CAAC,uCAAuC,CAAC,CAC7CC,IAAI,CAACC,QAAQ,IACd;MACI;MACA,MAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAI,CAACC,OAAO,IAAI,EAAE,CAAC,CAAC;MAC1CC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,IAAI,CAAC,CAAC,CAAC;MACvCP,UAAU,CAACO,IAAI,CAAC;IACpB,CAAC,CAAC,CACDI,KAAK,CAACC,KAAK,IAAIH,OAAO,CAACG,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC,CAAC;EACxE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,gBAAgB,GAAGd,OAAO,CAACe,KAAK,CAClC,CAACb,WAAW,GAAG,CAAC,IAAIE,YAAY,EAChCF,WAAW,GAAGE,YAClB,CAAC;EAED,MAAMY,QAAQ,GAAGA,CAAA,KAAMb,cAAc,CAACc,IAAI,IAAIC,IAAI,CAACC,GAAG,CAACF,IAAI,GAAG,CAAC,EAAEC,IAAI,CAACE,IAAI,CAACpB,OAAO,CAACqB,MAAM,GAAGjB,YAAY,CAAC,CAAC,CAAC;EAC3G,MAAMkB,QAAQ,GAAGA,CAAA,KAAMnB,cAAc,CAACc,IAAI,IAAIC,IAAI,CAACK,GAAG,CAACN,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;EAEpE,oBACIpB,OAAA;IAAK2B,SAAS,EAAE7B,MAAM,CAAC8B,UAAW;IAAAC,QAAA,gBAC9B7B,OAAA;MAAA6B,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BjC,OAAA;MAAA6B,QAAA,gBACI7B,OAAA;QAAA6B,QAAA,eACA7B,OAAA;UAAA6B,QAAA,gBACI7B,OAAA;YAAA6B,QAAA,EAAI;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjBjC,OAAA;YAAA6B,QAAA,EAAI;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACbjC,OAAA;YAAA6B,QAAA,EAAI;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACRjC,OAAA;QAAA6B,QAAA,EACCZ,gBAAgB,CAACiB,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAChCpC,OAAA;UAAA6B,QAAA,gBACI7B,OAAA;YAAA6B,QAAA,EAAKM,MAAM,CAACE;UAAQ;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC1BjC,OAAA;YAAA6B,QAAA,EAAKM,MAAM,CAACG,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;UAAC;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACpCjC,OAAA;YAAA6B,QAAA,EAAKM,MAAM,CAACK;UAAS;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA,GAHtBG,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIV,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACRjC,OAAA;MAAK2B,SAAS,EAAE7B,MAAM,CAAC2C,UAAW;MAAAZ,QAAA,gBAC9B7B,OAAA;QAAQ0C,OAAO,EAAEjB,QAAS;QAACkB,QAAQ,EAAEtC,WAAW,KAAK,CAAE;QAAAwB,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACzEjC,OAAA;QAAQ0C,OAAO,EAAEvB,QAAS;QAACwB,QAAQ,EAAEtC,WAAW,KAAKgB,IAAI,CAACE,IAAI,CAACpB,OAAO,CAACqB,MAAM,GAAGjB,YAAY,CAAE;QAAAsB,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3G,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAC/B,EAAA,CArDID,UAAU;AAAA2C,EAAA,GAAV3C,UAAU;AAuDhB,eAAeA,UAAU;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}